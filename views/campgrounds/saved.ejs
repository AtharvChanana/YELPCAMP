<% layout('layouts/boilerplate') %>

<div class="container py-4">
    <div class="row">
        <div class="col-12">
            <h1 class="display-5 fw-bold mb-4" style="color: var(--primary-color) !important;">Saved Campgrounds</h1>
        </div>
    </div>

    <% if (!campgrounds || campgrounds.length === 0) { %>
        <div class="text-center py-5">
            <h2 class="mb-3" style="color: var(--primary-color) !important;">No Saved Campgrounds</h2>
            <p class="text-white-50">You haven't saved any campgrounds yet. Start saving your favorite campgrounds by clicking the save button on any campground page.</p>
            <a href="/campgrounds" class="btn btn-primary">Browse Campgrounds</a>
        </div>
    <% } else { %>
        <!-- Filter Buttons -->
        <div class="d-flex flex-wrap justify-content-center gap-2 mb-4">
            <button class="btn btn-sm btn-outline-primary rounded-pill px-3 filter-btn active" data-filter="all">All</button>
            <button class="btn btn-sm btn-outline-primary rounded-pill px-3 filter-btn" data-filter="popular">Popular</button>
            <button class="btn btn-sm btn-outline-primary rounded-pill px-3 filter-btn" data-filter="beach">Beach</button>
            <button class="btn btn-sm btn-outline-primary rounded-pill px-3 filter-btn" data-filter="mountain">Mountain</button>
            <button class="btn btn-sm btn-outline-primary rounded-pill px-3 filter-btn" data-filter="forest">Forest</button>
            <button class="btn btn-sm btn-outline-primary rounded-pill px-3 filter-btn" data-filter="lakeside">Lakeside</button>
        </div>

        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4" id="campgrounds-container">
            <% campgrounds.forEach(campground => { %>
                <% if (campground) { %>
                    <div class="col" data-categories="<%= campground.category ? campground.category.toLowerCase() : '' %>">
                        <div class="card h-100 bg-dark-3 border-0">
                            <img src="<%= campground.image %>?auto=format" class="card-img-top" alt="<%= campground.title %>">
                            <div class="card-body">
                                <h5 class="card-title text-white"><%= campground.title %></h5>
                                <p class="card-text text-white-50"><%= campground.description.substring(0, 100) + '...' %></p>
                                <div class="d-flex justify-content-between align-items-center">
                                    <span class="text-white-50"><i class="fas fa-map-marker-alt me-1"></i> <%= campground.location %></span>
                                    <div class="d-flex gap-2">
                                        <a href="/campgrounds/<%= campground._id %>" class="btn btn-outline-light">View Details</a>
                                        <form action="/campgrounds/<%= campground._id %>/unsave" method="POST" class="d-inline">
                                            <button type="submit" class="btn btn-outline-danger">
                                                <i class="fas fa-trash-alt me-1"></i> Remove
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                <% } %>
            <% }) %>
        </div>
    <% } %>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const filterButtons = document.querySelectorAll('.filter-btn');
    const container = document.getElementById('campgrounds-container');
    const campgroundCards = Array.from(document.querySelectorAll('#campgrounds-container .col'));
    
    // Add click event listeners to filter buttons
    filterButtons.forEach(button => {
        button.addEventListener('click', function() {
            // Remove active class from all buttons
            filterButtons.forEach(btn => btn.classList.remove('active', 'btn-primary', 'btn-outline-primary'));
            // Add active class to clicked button
            this.classList.add('active', 'btn-primary');
            this.classList.remove('btn-outline-primary');
            
            const filter = this.getAttribute('data-filter');
            sortCampgrounds(filter);
        });
    });
    
    function sortCampgrounds(filter) {
        // First, show all cards
        campgroundCards.forEach(card => card.style.display = '');
        
        if (filter === 'all') {
            // No need to sort if 'All' is selected
            campgroundCards.sort((a, b) => {
                const aTitle = a.querySelector('.card-title').textContent.toLowerCase();
                const bTitle = b.querySelector('.card-title').textContent.toLowerCase();
                return aTitle.localeCompare(bTitle);
            });
        } else {
            // Sort by location first, then by title
            campgroundCards.sort((a, b) => {
                const aLocation = a.querySelector('span.text-white-50').textContent.toLowerCase();
                const bLocation = b.querySelector('span.text-white-50').textContent.toLowerCase();
                const aTitle = a.querySelector('.card-title').textContent.toLowerCase();
                const bTitle = b.querySelector('.card-title').textContent.toLowerCase();
                
                // If locations are different, sort by location
                if (aLocation !== bLocation) {
                    return aLocation.localeCompare(bLocation);
                }
                // If same location, sort by title
                return aTitle.localeCompare(bTitle);
            });
            
            // If a specific filter is selected, move matching locations to the top
            if (filter !== 'popular') {
                campgroundCards.sort((a, b) => {
                    const aLocation = a.querySelector('span.text-white-50').textContent.toLowerCase();
                    const bLocation = b.querySelector('span.text-white-50').textContent.toLowerCase();
                    
                    // If location matches the filter, move it to the top
                    if (aLocation.includes(filter) && !bLocation.includes(filter)) {
                        return -1;
                    } else if (!aLocation.includes(filter) && bLocation.includes(filter)) {
                        return 1;
                    }
                    return 0;
                });
            } else {
                // For 'Popular' filter, sort by rating (if available)
                campgroundCards.sort((a, b) => {
                    const aRating = parseFloat(a.querySelector('.rating-value')?.textContent || '0');
                    const bRating = parseFloat(b.querySelector('.rating-value')?.textContent || '0');
                    return bRating - aRating; // Sort descending (highest first)
                });
            }
        }
        
        // Re-append the sorted cards to the container
        campgroundCards.forEach(card => container.appendChild(card));
    }
    
    // Initialize with 'All' filter
    const allButton = document.querySelector('.filter-btn[data-filter="all"]');
    if (allButton) allButton.click();
});
</script>
